FROM python:3.9-bullseye as builder

# If this is set to a non-empty string, Python wonâ€™t try
# to write .pyc files on the import of source modules
ENV PYTHONDONTWRITEBYTECODE=1

# Force the stdout and stderr streams to be unbuffered.
# This option has no effect on the stdin stream.
ENV PYTHONUNBUFFERED=1

ARG USERNAME=daiquiri
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Create the non-root user up front
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME

RUN python -m venv /opt/venv

ENV PATH="/opt/venv/bin:$PATH"

RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends \ 
    build-essential \
    libxml2-dev \
    libxslt-dev \
    zlib1g-dev \
    libpq-dev \
    python3-dev \
    postgresql-client-13 \
    libsasl2-dev \
    libldap2-dev \
    libssl-dev \
    ldap-utils 

COPY requirements.txt .

RUN pip3 install --upgrade pip setuptools wheel  && \
    pip3 --disable-pip-version-check --no-cache-dir install -r requirements.txt \
    && rm -rf /tmp/pip-tmp


# # Este bloco funciona
# # add user so we can run things as non-root
# RUN groupadd --gid $USER_GID $USERNAME
# RUN useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME
WORKDIR /app

COPY ./entrypoint.sh .

COPY . .

# Este bloco funciona
# RUN chown -R $USER_UID:$USER_GID /app

RUN mkdir /data /data/log /data/files /data/download /data/upload \
    && chown -R $USER_UID:$USER_GID /data /data/log /data/files /data/download /data/upload \
    && chmod -R 765 /data /data/log /data/files /data/download /data/upload

# Basic Settings necessary for run download_vendor_files during build process
ENV FILES_BASE_PATH=/data/files
ENV QUERY_DOWNLOAD_DIR=/data/download


RUN python manage.py download_vendor_files \
    && python manage.py collectstatic --clear --noinput --verbosity 0 \
    && chown -R $USER_UID:$USER_GID /app/vendor /app/static_root

USER $USERNAME
CMD [ "./entrypoint.sh" ]
