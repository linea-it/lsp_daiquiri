version: '3.9'

volumes:
  postgres-data:
  rabbitmq-data:

services:
  daiquiri: &daiquiri
    image: linea/lsp_daiquiri
    build:
      context: .
      dockerfile: ./compose/local/daiquiri/Dockerfile
    user: "1000:1000"
    env_file:
      - .env
    volumes:
      # Django Src
      - ./daiquiri:/app
      # Django Settings
      - ./local_settings.py:/app/config/settings/local.py:ro
      # Django SAML
      - ./certificates:/app/certificates
      - ./metadatas:/app/metadatas
      # Data folders
      - ./database_sample:/app/fixtures
      - ./data/files:/data/files
      - ./data/download:/data/download
      - ./data/upload:/data/upload
      # Logs
      - ./logs:/var/log/daiquiri
      - ./logs:/var/log/celery
      # Development workspace
      - ..:/workspaces
    command: /start.sh
    depends_on:
      - database
      - rabbit

  database:
    build:
      context: .
      dockerfile: ./compose/local/postgres/Dockerfile
    volumes:
      - ./compose/local/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
      - ./database_sample:/data
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - 5432:5432

  # Message-Broker Software RabbitMQ
  rabbit:
    image: rabbitmq:3-management-alpine
    env_file:
      - .env
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/

  celery_flower: &celery_flower
    <<: *daiquiri
    command: celery -A config flower --url-prefix=flower
    depends_on:
      - daiquiri

  # Servidor Web NGINX
  nginx:
    image: nginx:1.21.6-alpine
    ports:
      - 80:80
    volumes:
      # Arquivo de configuração do Ngnix para este ambiente.
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      # Diretório onde o backend manipula arquivos, e que deve ficar acessivel ao servidor web.
      - ./data/download:/data/download
      # Diretório de logs do servidor web.
      - ./logs:/var/log/nginx
    depends_on:
      - daiquiri
